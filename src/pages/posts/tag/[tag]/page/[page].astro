---
import type { SelectProperty } from '../../../../../lib/interfaces.ts'
import {
  getPostsByTagAndPage,
  getAllTags,
  getNumberOfPagesByTag,
  getPageIdPreviewMap
} from '../../../../../lib/notion/client.ts'
import Layout from '../../../../../layouts/Layout.astro'
import NoContents from '../../../../../components/NoContents.astro'
import PostTitle from '../../../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../../../components/PostFeaturedImage.astro'
import PostPreview from '../../../../../components/PostPreview.astro'
import ReadMoreLink from '../../../../../components/ReadMoreLink.astro'
import Pagination from '../../../../../components/Pagination.astro'
import styles from '../../../../../styles/blog.module.css'
import '../../../../../styles/notion-color.css'

export async function getStaticPaths() {
  const allTags = await getAllTags()

  let params = []

  await Promise.all(
    allTags.map((tag: SelectProperty) => {
      return getNumberOfPagesByTag(tag.name).then((numberOfPages: number) => {
        for (let i = 2; i <= numberOfPages; i++) {
          params.push({ params: { tag: tag.name, page: i.toString() } })
        }
      })
    })
  )

  return params
}

const { tag, page } = Astro.params

const [posts, numberOfPages] = await Promise.all([
  getPostsByTagAndPage(tag, parseInt(page, 10)),
  getNumberOfPagesByTag(tag),
])

const [previews] = await Promise.all([
  getPageIdPreviewMap(posts)
])

// const currentTag = posts[0].Tags.find((t) => t.name === tag)
---

<Layout
  title={`Posts in ${tag} ${page}/${numberOfPages}`}
  path={`/posts/tag/${tag}/page/${page}`}
>
  <div slot="main" class={styles.main}>
    <!-- <header>
      <div class="tag-container">
        <span class={`tag ${currentTag.color}`}>{tag}</span>
        {page}/{numberOfPages}
      </div>
    </header> -->

    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post) => (
          <div class={styles.post} key={post.Slug}>
            <PostTitle post={post} />
            <PostFeaturedImage post={post} />
            <PostPreview previews={previews} post={post} />
            <ReadMoreLink post={post} />
          </div>
        ))
      )
    }

    <footer>
      <Pagination
        tag={tag}
        currentPage={parseInt(page, 10)}
        numberOfPages={numberOfPages}
      />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
  </div>
</Layout>

<style>
  .tag-container {
    margin: 0;
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  @media (max-width: 640px) {
    .tag-container {
      font-size: 1.15rem;
    }
  }
  .tag-container span.tag {
    border-radius: 4px;
    padding: 3px 9px;
    background: var(--tag-bg-light-gray);
  }
</style>
